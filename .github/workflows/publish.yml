name: Publish
on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
    runs-on: ${{ matrix.os }}

    steps:
        - name: Checkout
          uses: actions/checkout@v1

        - name: Setup dotnet
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 8.0.x
        
        - name: Build on Linux
          if: matrix.kind == 'linux'
          run: |
              # Define some variables for things we need
              tag=$(git describe --tags --abbrev=0)
              release_name="App-$tag-${{ matrix.target }}"

              # Build everything
              dotnet publish --framework net8.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name" /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:UseAppHost=true

              # Pack files
              tar czvf "${release_name}.tar.gz" "$release_name"

              # Delete output directory
              rm -r "$release_name"

        - name: Build on Windows
          if: matrix.kind == 'windows'
          shell: cmd
          run: |
              # Define some variables for things we need
              set tag=$(git describe --tags --abbrev=0)
              set release_name=App-%tag%-${{ matrix.target }}

              # Build everything
              dotnet publish --framework net8.0 --runtime %{{ matrix.target }}% -c Release -o %release_name% /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:UseAppHost=true

              # Pack files
              7z a -tzip "%release_name%.zip" ".\%release_name%\*"

              # Delete output directory
              rmdir /s /q "%release_name%"

        - name: Publish
          uses: softprops/action-gh-release@v1
          with:
            files: "App*"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}